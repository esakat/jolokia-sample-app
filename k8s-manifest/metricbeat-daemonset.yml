---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-jmx-config
  namespace: kube-system
  labels:
    k8s-app: metricbeat-jmx
data:
  metricbeat.yml: |-
    metricbeat.config.modules:
      path: ${path.config}/modules.d/*.yml
      reload.enabled: true

    metricbeat.autodiscover:
      providers:
        - type: jolokia
          interfaces:
          - name: en*
          - name: br*
          - name: eth*
          templates:
          - condition:
            config:
            - module: jolokia
              metricsets: ["jmx"]
              namespace: "jmx"
              hosts: ["${data.jolokia.url}"]
              jmx.mappings:
              - mbean: "java.lang:type=Runtime"
                attributes:
                - attr: Uptime
                  field: uptime
              - mbean: "java.lang:type=Memory"
                attributes:
                - attr: HeapMemoryUsage
                  field: memory.heap_usage
                - attr: NonHeapMemoryUsage
                  field: memory.non_heap_usage
              - mbean: "java.lang:name=Eden Space,type=MemoryPool"
                attributes:
                - attr: Usage
                  field: memory.eden_usage
              - mbean: "java.lang:name=Survivor Space,type=MemoryPool"
                attributes:
                - attr: Usage
                  field: memory.survivor_usage
              - mbean: "java.lang:name=Tenured Gen,type=MemoryPool"
                attributes:
                - attr: Usage
                  field: memory.tenured_usage
              - mbean: "java.lang:name=Copy,type=GarbageCollector"
                attributes:
                - attr: ObjectName
                  field: copygc.name
                - attr: LastGcInfo
                  field: copygc.lastgcinfo
                - attr: CollectionTime
                  field: copygc.collectiontime
                - attr: CollectionCount
                  field: copygc.collectioncount
              - mbean: "java.lang:type=OperatingSystem"
                attributes:
                - attr: ProcessCpuLoad
                  field: os.cpu_load
                - attr: ProcessCpuTime
                  field: os.cpu_time
              - mbean: "java.lang:type=Threading"
                attributes:
                - attr: ThreadCount
                  field: thread.count
                - attr: DaemonThreadCount
                  field: thread.daemon_count
                - attr: CurrentThreadUserTime
                  field: thread.cpu_user
                - attr: CurrentThreadCpuTime
                  field: thread.cpu_time

    output.console
      pretty: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-daemonset-modules
  namespace: kube-system
  labels:
    k8s-app: metricbeat
data:
  system.yml: |-
    - module: system
      period: 10s
      metricsets:
        - cpu
        - load
        - memory
        - network
        - process
        - process_summary
        - core
        - diskio
        - socket
      processes: ['.*']
      process.include_top_n:
        by_cpu: 5      # include top 5 processes by CPU
        by_memory: 5   # include top 5 processes by memory

    - module: system
      period: 1m
      metricsets:
        - filesystem
        - fsstat
      processors:
      - drop_event.when.regexp:
          system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'
  docker.yml: |-
    - module: docker
      metricsets:
        - container
        - diskio
        - cpu
        # - event
        - healthcheck
        - image
        - info
        - memory
        - network
     hosts: ["unix:///var/run/docker.sock"]
     period: 10s
     enable: true
  kubernetes.yml: |-
    - module: kubernetes
      metricsets:
        - node
        - system
        - pod
        - container
        - volume
      period: 10s
      host: ${NODE_NAME}
      hosts: ["localhost:10255"]
      # If using Red Hat OpenShift remove the previous hosts entry and
      # uncomment these settings:
      #hosts: ["https://${HOSTNAME}:10250"]
      #bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      #ssl.certificate_authorities:
        #- /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt
---
# Deploy a Metricbeat instance per node for node metrics retrieval
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: metricbeat
  namespace: kube-system
  labels:
    k8s-app: metricbeat
spec:
  template:
    metadata:
      labels:
        k8s-app: metricbeat
    spec:
      serviceAccountName: metricbeat
      terminationGracePeriodSeconds: 30
      containers:
        - name: metricbeat
          image: docker.elastic.co/beats/metricbeat:7.2.0
          args: [
            "-c", "/etc/metricbeat.yml",
            "-e",
            "-system.hostfs=/hostfs",
          ]
          securityContext:
            runAsUser: 0
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: config
              mountPath: /etc/metricbeat.yml
              readOnly: true
              subPath: metricbeat.yml
            - name: modules
              mountPath: /usr/share/metricbeat/modules.d
              readOnly: true
            - name: dockersock
              mountPath: /var/run/docker.sock
            - name: proc
              mountPath: /hostfs/proc
              readOnly: true
            - name: cgroup
              mountPath: /hostfs/sys/fs/cgroup
              readOnly: true
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
        - name: config
          configMap:
            defaultMode: 0600
            name: metricbeat-jmx-config
        - name: modules
          configMap:
            defaultMode: 0600
            name: metricbeat-daemonset-modules
        - name: data
          hostPath:
            path: /var/lib/metricbeat-data
            type: DirectoryOrCreate
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: metricbeat
subjects:
  - kind: ServiceAccount
    name: metricbeat
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: metricbeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: metricbeat
  labels:
    k8s-app: metricbeat
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - namespaces
      - events
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources:
      - replicasets
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources:
      - statefulsets
      - deployments
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - ""
    resources:
      - nodes/stats
    verbs:
      - get
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metricbeat
  namespace: kube-system
  labels:
    k8s-app: metricbeat
---